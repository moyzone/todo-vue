{"remainingRequest":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\src\\components\\TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\src\\components\\TodoList.vue","mtime":1655450704181},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655451129463},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":1655451129740},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655451129463},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-list-vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":1655451126177}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport TaskItem from \"./TaskItem\";\r\nimport NewTask from \"./NewTask\";\r\nexport default {\r\n  name: \"TodoList\",\r\n  components: { NewTask, TaskItem },\r\n  props: {\r\n    // msg: String\r\n  },\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      filterBy: \"all\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getFromLocalStorage();\r\n  },\r\n  methods: {\r\n    createNewTask(task) {\r\n      // adds a new task to the array\r\n      let newTask = {\r\n        taskTitle: task.newTaskTitle,\r\n        taskDescription: task.newTaskDesc,\r\n        taskStatus: \"todo\",\r\n        taskId: this.newTaskId\r\n      };\r\n      if (newTask.taskTitle.length > 0) {\r\n        this.tasks.push(newTask);\r\n        this.saveToLocalStorage();\r\n      }\r\n    },\r\n    updateATask(updatedTask) {\r\n      this.tasks.forEach(task => {\r\n        if (task.taskId === updatedTask.itemId) {\r\n          task.taskTitle = updatedTask.itemTitle;\r\n          task.taskDescription = updatedTask.itemDesc;\r\n          task.taskStatus = updatedTask.itemStatus;\r\n        }\r\n      });\r\n      this.saveToLocalStorage();\r\n    },\r\n    getFromLocalStorage() {\r\n      if (localStorage.tasks) this.tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    },\r\n    saveToLocalStorage() {\r\n      localStorage.setItem(\"tasks\",JSON.stringify(this.tasks));\r\n    },\r\n  },\r\n  computed: {\r\n    newTaskId() {\r\n      return (\r\n        this.tasks.reduce((max, curr) => Math.max(max, curr.taskId), 0) + 1\r\n      );\r\n    },\r\n    tasksToShow() {\r\n      return this.filterBy === \"all\"\r\n        ? this.tasks.filter(task => task.taskStatus !== \"deleted\")\r\n        : this.tasks.filter(task => task.taskStatus === this.filterBy);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div class=\"filter-bar\">\r\n      <button @click=\"filterBy = 'all'\">all</button>\r\n      <button @click=\"filterBy = 'todo'\">todo</button>\r\n      <button @click=\"filterBy = 'done'\">done</button>\r\n    </div>\r\n    <new-task @create-new-task=\"createNewTask\"></new-task>\r\n    <div v-for=\"task in tasksToShow\" :key=\"task.taskId\">\r\n      <task-item\r\n        class=\"blue\"\r\n        :task-details=\"task\"\r\n        @task-update=\"updateATask\"\r\n      ></task-item>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskItem from \"./TaskItem\";\r\nimport NewTask from \"./NewTask\";\r\nexport default {\r\n  name: \"TodoList\",\r\n  components: { NewTask, TaskItem },\r\n  props: {\r\n    // msg: String\r\n  },\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      filterBy: \"all\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getFromLocalStorage();\r\n  },\r\n  methods: {\r\n    createNewTask(task) {\r\n      // adds a new task to the array\r\n      let newTask = {\r\n        taskTitle: task.newTaskTitle,\r\n        taskDescription: task.newTaskDesc,\r\n        taskStatus: \"todo\",\r\n        taskId: this.newTaskId\r\n      };\r\n      if (newTask.taskTitle.length > 0) {\r\n        this.tasks.push(newTask);\r\n        this.saveToLocalStorage();\r\n      }\r\n    },\r\n    updateATask(updatedTask) {\r\n      this.tasks.forEach(task => {\r\n        if (task.taskId === updatedTask.itemId) {\r\n          task.taskTitle = updatedTask.itemTitle;\r\n          task.taskDescription = updatedTask.itemDesc;\r\n          task.taskStatus = updatedTask.itemStatus;\r\n        }\r\n      });\r\n      this.saveToLocalStorage();\r\n    },\r\n    getFromLocalStorage() {\r\n      if (localStorage.tasks) this.tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    },\r\n    saveToLocalStorage() {\r\n      localStorage.setItem(\"tasks\",JSON.stringify(this.tasks));\r\n    },\r\n  },\r\n  computed: {\r\n    newTaskId() {\r\n      return (\r\n        this.tasks.reduce((max, curr) => Math.max(max, curr.taskId), 0) + 1\r\n      );\r\n    },\r\n    tasksToShow() {\r\n      return this.filterBy === \"all\"\r\n        ? this.tasks.filter(task => task.taskStatus !== \"deleted\")\r\n        : this.tasks.filter(task => task.taskStatus === this.filterBy);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.blue {\r\n  background-color: cornflowerblue;\r\n}\r\n  .filter-bar{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 3px 0;\r\n}\r\n</style>\r\n"]}]}