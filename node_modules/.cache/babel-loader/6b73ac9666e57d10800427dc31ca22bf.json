{"remainingRequest":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\src\\components\\TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\src\\components\\TodoList.vue","mtime":1655462564585},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655451129463},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\babel-loader\\lib\\index.js","mtime":1655451129740},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655451129463},{"path":"C:\\Users\\souravd\\OneDrive - Aditi Consulting\\Desktop\\todo-personal\\node_modules\\vue-loader\\lib\\index.js","mtime":1655451126177}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskItem from \"./TaskItem\";\nimport NewTask from \"./NewTask\";\nexport default {\n  name: \"TodoList\",\n  components: {\n    NewTask: NewTask,\n    TaskItem: TaskItem\n  },\n  props: {// msg: String\n  },\n  data: function data() {\n    return {\n      tasks: [],\n      filterBy: \"all\"\n    };\n  },\n  mounted: function mounted() {\n    this.getFromLocalStorage();\n  },\n  methods: {\n    createNewTask: function createNewTask(task) {\n      // adds a new task to the array\n      var newTask = {\n        taskTitle: task.newTaskTitle,\n        taskDescription: task.newTaskDesc,\n        taskStatus: \"todo\",\n        taskId: this.newTaskId\n      };\n\n      if (newTask.taskTitle.length > 0) {\n        this.tasks.push(newTask);\n        this.saveToLocalStorage();\n      }\n    },\n    updateATask: function updateATask(updatedTask) {\n      this.tasks.forEach(function (task) {\n        if (task.taskId === updatedTask.itemId) {\n          task.taskTitle = updatedTask.itemTitle;\n          task.taskDescription = updatedTask.itemDesc;\n          task.taskStatus = updatedTask.itemStatus;\n        }\n      });\n      this.saveToLocalStorage();\n    },\n    getFromLocalStorage: function getFromLocalStorage() {\n      if (localStorage.tasks) this.tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    },\n    saveToLocalStorage: function saveToLocalStorage() {\n      localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    }\n  },\n  computed: {\n    newTaskId: function newTaskId() {\n      return this.tasks.reduce(function (max, curr) {\n        return Math.max(max, curr.taskId);\n      }, 0) + 1;\n    },\n    tasksToShow: function tasksToShow() {\n      var _this = this;\n\n      return this.filterBy === \"all\" ? this.tasks.filter(function (task) {\n        return task.taskStatus !== \"deleted\";\n      }) : this.tasks.filter(function (task) {\n        return task.taskStatus === _this.filterBy;\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,QAAA;AACA,OAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,CACA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,mBAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,IADA,EACA;AACA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,SAAA,EAAA,IAAA,CAAA,YADA;AAEA,QAAA,eAAA,EAAA,IAAA,CAAA,WAFA;AAGA,QAAA,UAAA,EAAA,MAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OAAA;;AAMA,UAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AACA,aAAA,kBAAA;AACA;AACA,KAbA;AAcA,IAAA,WAdA,uBAcA,WAdA,EAcA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,MAAA,KAAA,WAAA,CAAA,MAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AACA,UAAA,IAAA,CAAA,eAAA,GAAA,WAAA,CAAA,QAAA;AACA,UAAA,IAAA,CAAA,UAAA,GAAA,WAAA,CAAA,UAAA;AACA;AACA,OANA;AAOA,WAAA,kBAAA;AACA,KAvBA;AAwBA,IAAA,mBAxBA,iCAwBA;AACA,UAAA,YAAA,CAAA,KAAA,EAAA,KAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,KA1BA;AA2BA,IAAA,kBA3BA,gCA2BA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA;AACA;AA7BA,GAfA;AA8CA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aACA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AAAA,OAAA,EAAA,CAAA,IAAA,CADA;AAGA,KALA;AAMA,IAAA,WANA,yBAMA;AAAA;;AACA,aAAA,KAAA,QAAA,KAAA,KAAA,GACA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,UAAA,KAAA,SAAA;AAAA,OAAA,CADA,GAEA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,UAAA,KAAA,KAAA,CAAA,QAAA;AAAA,OAAA,CAFA;AAGA;AAVA;AA9CA,CAAA","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div class=\"filter-bar\">\r\n      <button @click=\"filterBy = 'all'\">All</button>\r\n      <button @click=\"filterBy = 'todo'\">Todo</button>\r\n      <button @click=\"filterBy = 'done'\">Done</button>\r\n    </div>\r\n    <new-task @create-new-task=\"createNewTask\"></new-task>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <div v-for=\"task in tasksToShow\" :key=\"task.taskId\">\r\n      <task-item\r\n        class=\"blue\"\r\n        :task-details=\"task\"\r\n        @task-update=\"updateATask\"\r\n      ></task-item>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskItem from \"./TaskItem\";\r\nimport NewTask from \"./NewTask\";\r\nexport default {\r\n  name: \"TodoList\",\r\n  components: { NewTask, TaskItem },\r\n  props: {\r\n    // msg: String\r\n  },\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      filterBy: \"all\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getFromLocalStorage();\r\n  },\r\n  methods: {\r\n    createNewTask(task) {\r\n      // adds a new task to the array\r\n      let newTask = {\r\n        taskTitle: task.newTaskTitle,\r\n        taskDescription: task.newTaskDesc,\r\n        taskStatus: \"todo\",\r\n        taskId: this.newTaskId\r\n      };\r\n      if (newTask.taskTitle.length > 0) {\r\n        this.tasks.push(newTask);\r\n        this.saveToLocalStorage();\r\n      }\r\n    },\r\n    updateATask(updatedTask) {\r\n      this.tasks.forEach(task => {\r\n        if (task.taskId === updatedTask.itemId) {\r\n          task.taskTitle = updatedTask.itemTitle;\r\n          task.taskDescription = updatedTask.itemDesc;\r\n          task.taskStatus = updatedTask.itemStatus;\r\n        }\r\n      });\r\n      this.saveToLocalStorage();\r\n    },\r\n    getFromLocalStorage() {\r\n      if (localStorage.tasks) this.tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    },\r\n    saveToLocalStorage() {\r\n      localStorage.setItem(\"tasks\",JSON.stringify(this.tasks));\r\n    },\r\n  },\r\n  computed: {\r\n    newTaskId() {\r\n      return (\r\n        this.tasks.reduce((max, curr) => Math.max(max, curr.taskId), 0) + 1\r\n      );\r\n    },\r\n    tasksToShow() {\r\n      return this.filterBy === \"all\"\r\n        ? this.tasks.filter(task => task.taskStatus !== \"deleted\")\r\n        : this.tasks.filter(task => task.taskStatus === this.filterBy);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.blue {\r\n  background-color: cornflowerblue;\r\n}\r\n  .filter-bar{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding: 3px 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}